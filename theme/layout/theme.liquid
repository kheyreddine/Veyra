<!DOCTYPE html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="#111111">
    <link rel="canonical" href="{{ canonical_url }}">

      <!-- Preload critical resources for performance -->
    <link
      rel="preload"
      href="{{ 'base.css' | asset_url }}"
      as="style">
    <link
      rel="preload"
      href="{{ 'header.css' | asset_url }}"
      as="style">
    <link
      rel="preload"
      href="{{ 'hero.css' | asset_url }}"
      as="style">
    <link
      rel="preload"
      href="{{ 'performance.js' | asset_url }}"
      as="script">

      <!-- Preconnect to external domains for faster loading -->
    <link rel="preconnect" href="https://cdn.shopify.com">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://cdn.shopify.com">

      <!-- Critical CSS inlined to prevent layout shifts -->
    <style>
    /* Critical CSS for above-the-fold content */
    :root {
      --color-primary: #111111;
      --color-secondary: #f5f5f5;
      --color-accent: #e63946;
      --color-white: #ffffff;
      --font-heading: 'Poppins'
      , system-ui
      , -apple-system
      , BlinkMacSystemFont
      , "Segoe UI"
      , Roboto
      , sans-serif;
      --font-body: 'Inter'
      , system-ui
      , -apple-system
      , BlinkMacSystemFont
      , "Segoe UI"
      , Roboto
      , sans-serif;
    }

    /* Prevent layout shifts during font loading */
    .hero {
      min-height: 500px;
      height: 60vh;
      max-height: 800px;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
      contain: layout style paint;
    }

    .hero__title {
      font-size: 48px;
      font-weight: 700;
      color: var(--color-white);
      text-transform: uppercase;
      letter-spacing: 2px;
      margin: 0 0 20px;
      line-height: 1.2;
      min-height: 58px;
      contain: layout style;
    }

    .hero__subtitle {
      font-size: 20px;
      font-weight: 400;
      color: var(--color-white);
      margin: 0 0 32px;
      line-height: 1.6;
      max-width: 600px;
      min-height: 30px;
      contain: layout style;
    }

    .hero__button {
      display: inline-block;
      padding: 16px 32px;
      background-color: var(--color-accent);
      color: var(--color-white);
      text-decoration: none;
      text-transform: uppercase;
      font-weight: 600;
      font-size: 16px;
      letter-spacing: 1px;
      border-radius: 9999px;
      transition: all 0.3s ease;
      min-height: 56px;
      line-height: 1.5;
      contain: layout style;
    }

    /* Mobile responsive critical CSS */
    @media (max-width: 640px) {
      .hero {
        min-height: 400px;
        height: 50vh;
      }

      .hero__title {
        font-size: 32px;
        min-height: 40px;
      }

      .hero__subtitle {
        font-size: 16px;
        min-height: 24px;
      }

      .hero__button {
        padding: 14px 28px;
        font-size: 14px;
        min-height: 48px;
      }
    }
  </style>

  <!-- Load non-critical CSS asynchronously -->
  <link
    rel="stylesheet"
    href="{{ 'base.css' | asset_url }}"
    media="print"
    onload="this.media='all'">
  <link
    rel="stylesheet"
    href="{{ 'header.css' | asset_url }}"
    media="print"
    onload="this.media='all'">
  <link
    rel="stylesheet"
    href="{{ 'hero.css' | asset_url }}"
    media="print"
    onload="this.media='all'">

  <!-- Fallback for browsers that don't support onload -->
  <noscript>
    <link rel="stylesheet" href="{{ 'base.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'header.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'hero.css' | asset_url }}">
</noscript>

  <!-- Performance and Analytics -->
{{ content_for_header }}

  <!-- Schema.org Structured Data for SEO -->
  {% render 'schema-org' %}

  <!-- Service Worker Registration -->
  <script>
      // Register service worker for performance optimization
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('{{ 'service-worker.js' | asset_url }}')
            .then(registration => {
              console.log('‚úÖ Service Worker registered:', registration);
            })
            .catch(error => {
              console.warn('‚ö†Ô∏è Service Worker registration failed:', error);
            });
        });
      }
  </script>

  <!-- Font loading optimization to prevent CLS -->
  <link
    rel="preload"
    href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Inter:wght@400;500;600&display=swap"
    as="style"
    onload="this.onload=null;this.rel='stylesheet'">
  <noscript>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Inter:wght@400;500;600&display=swap">
  </noscript>

  <!-- Performance monitoring script -->
  <script src="{{ 'performance.js' | asset_url }}" defer></script>

  <!-- Meta tags for better SEO -->
  <title>{{ page_title | escape }}{% if current_tags %}
      - tagged "{{ current_tags | join: ', ' }}"{% endif %}
    {% if current_page != 1 %}
      - Page {{ current_page }}{% endif %}
    {% unless page_title contains shop.name %}
      - {{ shop.name }}{% endunless %}
  </title>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}">
  {% endif %}

  <!-- Open Graph meta tags -->
  <meta property="og:type" content="website">
  <meta property="og:title" content="{{ page_title | escape }}">
  <meta property="og:url" content="{{ canonical_url }}">
  {% if page_description %}
    <meta property="og:description" content="{{ page_description | escape }}">
  {% endif %}
  {% if page_image %}
    <meta property="og:image" content="{{ page_image | image_url: width: 1200 }}">
  {% endif %}
  <meta property="og:site_name" content="{{ shop.name }}">

    <!-- Twitter Card meta tags -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="{{ page_title | escape }}">
  {% if page_description %}
    <meta name="twitter:description" content="{{ page_description | escape }}">
  {% endif %}
  {% if page_image %}
    <meta name="twitter:image" content="{{ page_image | image_url: width: 1200 }}">
  {% endif %}

  <!-- Favicon -->
  <link
    rel="icon"
    type="image/png"
    sizes="32x32"
    href="{{ 'favicon-32x32.png' | asset_url }}">
  <link
    rel="icon"
    type="image/png"
    sizes="16x16"
    href="{{ 'favicon-16x16.png' | asset_url }}">
  <link
    rel="apple-touch-icon"
    sizes="180x180"
    href="{{ 'apple-touch-icon.png' | asset_url }}">

    <!-- Manifest for PWA -->
  <link rel="manifest" href="{{ 'site.webmanifest' | asset_url }}">

    <!-- Theme color for mobile browsers -->
  <meta name="theme-color" content="#111111">
  <meta name="msapplication-TileColor" content="#111111">
</head>

<body class="template-{{ template | split: '.' | first }}">
  <!-- Skip to main content for accessibility -->
  <a href="#main-content" class="skip-link">Skip to main content
</a>

  <!-- Header Section -->
  {% section 'header' %}

  <!-- Main Content -->
  <main id="main-content" role="main">
    {{ content_for_layout }}
</main>

    <!-- Footer Section -->
    {% section 'footer' %}

    <!-- Performance Monitoring Script -->
  <script>
      // Performance monitoring initialization
      document.addEventListener('DOMContentLoaded', () => {
        // Track page load performance
        if ('PerformanceObserver' in window) {
          const observer = new PerformanceObserver((list) => {
            list.getEntries().forEach((entry) => {
              if (entry.entryType === 'navigation') {
                console.log('üöÄ Page Load Performance:', {
                  'DOM Content Loaded': entry.domContentLoadedEventEnd - entry.domContentLoadedEventStart + 'ms',
                  'Load Complete': entry.loadEventEnd - entry.loadEventStart + 'ms',
                  'Total Load Time': entry.loadEventEnd - entry.fetchStart + 'ms'
                });
              }
            });
          });
          observer.observe({ entryTypes: ['navigation'] });
        }
    
        // Add loading class to body for CSS optimizations
        document.body.classList.add('loaded');
      });
    
      // Track user interactions for FID optimization
      let firstInput = true;
      ['click', 'touchstart', 'keydown'].forEach(eventType => {
        document.addEventListener(eventType, () => {
          if (firstInput) {
            firstInput = false;
            console.log('üéØ First Input Detected:', eventType);
          }
        }, { once: true });
      });
  </script>

  <!-- Fallback CSS loading -->
  <script>
      // Ensure CSS is loaded even if onload fails
      setTimeout(() => {
        const links = document.querySelectorAll('link[media="print"]');
        links.forEach(link => {
          if (link.media === 'print') {
            link.media = 'all';
          }
        });
      }, 3000);
  </script>
</body></html>